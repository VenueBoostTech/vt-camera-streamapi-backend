"""Add business_id to cameras

Revision ID: fc3c1f8f2199
Revises: 
Create Date: 2025-01-01 11:06:54.397659

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fc3c1f8f2199'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('businesses',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('vt_platform_id', sa.String(), nullable=False),
    sa.Column('api_key', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_businesses_vt_platform_id'), 'businesses', ['vt_platform_id'], unique=True)
    op.create_table('entry_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('person_id', sa.String(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('age', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_entry_logs_camera_id'), 'entry_logs', ['camera_id'], unique=False)
    op.create_index(op.f('ix_entry_logs_id'), 'entry_logs', ['id'], unique=False)
    op.create_index(op.f('ix_entry_logs_person_id'), 'entry_logs', ['person_id'], unique=False)
    op.create_index(op.f('ix_entry_logs_timestamp'), 'entry_logs', ['timestamp'], unique=False)
    op.create_table('exit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('person_id', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exit_logs_camera_id'), 'exit_logs', ['camera_id'], unique=False)
    op.create_index(op.f('ix_exit_logs_id'), 'exit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_exit_logs_person_id'), 'exit_logs', ['person_id'], unique=False)
    op.create_index(op.f('ix_exit_logs_timestamp'), 'exit_logs', ['timestamp'], unique=False)
    op.create_table('properties',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'MIXED', name='propertytype'), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_properties_name'), 'properties', ['name'], unique=False)
    op.create_table('security_threat_detections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', name='threatseverity'), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smoke_detections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('intensity', sa.Float(), nullable=True),
    sa.Column('is_alarm_triggered', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('smoking_detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('bbox', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_smoking_detections_camera_id'), 'smoking_detections', ['camera_id'], unique=False)
    op.create_index(op.f('ix_smoking_detections_id'), 'smoking_detections', ['id'], unique=False)
    op.create_index(op.f('ix_smoking_detections_timestamp'), 'smoking_detections', ['timestamp'], unique=False)
    op.create_table('staff',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_name'), 'staff', ['name'], unique=False)
    op.create_table('threat_detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('threat_type', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('bbox', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threat_detections_camera_id'), 'threat_detections', ['camera_id'], unique=False)
    op.create_index(op.f('ix_threat_detections_id'), 'threat_detections', ['id'], unique=False)
    op.create_index(op.f('ix_threat_detections_timestamp'), 'threat_detections', ['timestamp'], unique=False)
    op.create_table('tracking_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('person_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('bbox', sa.String(), nullable=True),
    sa.Column('centroid', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tracking_logs_camera_id'), 'tracking_logs', ['camera_id'], unique=False)
    op.create_index(op.f('ix_tracking_logs_id'), 'tracking_logs', ['id'], unique=False)
    op.create_index(op.f('ix_tracking_logs_person_id'), 'tracking_logs', ['person_id'], unique=False)
    op.create_index(op.f('ix_tracking_logs_timestamp'), 'tracking_logs', ['timestamp'], unique=False)
    op.create_table('vehicle_detections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('vehicle_type', sa.String(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('bbox', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicle_detections_camera_id'), 'vehicle_detections', ['camera_id'], unique=False)
    op.create_index(op.f('ix_vehicle_detections_id'), 'vehicle_detections', ['id'], unique=False)
    op.create_index(op.f('ix_vehicle_detections_timestamp'), 'vehicle_detections', ['timestamp'], unique=False)
    op.create_table('breaks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buildings',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('RESIDENTIAL', 'COMMERCIAL', 'MIXED', name='buildingtype'), nullable=False),
    sa.Column('sub_address', sa.String(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('incidents',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('related_events', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sleeping_detections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vehicles',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('plate_number', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('RESIDENT', 'VISITOR', 'DELIVERY', 'UNAUTHORIZED', name='vehiclestatus'), nullable=False),
    sa.Column('first_seen', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('visit_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vehicles_plate_number'), 'vehicles', ['plate_number'], unique=True)
    op.create_table('work_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('total_duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('floors',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('building_id', sa.String(), nullable=False),
    sa.Column('floor_number', sa.Integer(), nullable=False),
    sa.Column('layout', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_spots',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('is_occupied', sa.Boolean(), nullable=True),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('valet_requests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vehicle_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('zones',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('building_id', sa.String(), nullable=False),
    sa.Column('floor_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('ENTRANCE', 'LOBBY', 'HALLWAY', 'STAIRWELL', 'GARAGE', 'OFFICE_ROOM', 'MEETING_ROOM', 'APARTMENT', 'RETAIL_SPACE', 'STORAGE_ROOM', 'BATHROOM', 'KITCHEN', 'GYM', 'LAUNDRY', 'RESTRICTED', 'UTILITY', 'SERVER_ROOM', 'OUTDOOR', 'PARKING_LOT', 'GARDEN', 'ROOFTOP', name='zonetype'), nullable=False),
    sa.Column('polygon', sa.String(), nullable=True),
    sa.Column('rules', sa.String(), nullable=True),
    sa.Column('settings', sa.String(), nullable=True),
    sa.Column('active', sa.Integer(), nullable=True),
    sa.Column('access_level', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('square_footage', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
    sa.ForeignKeyConstraint(['floor_id'], ['floors.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_zones_name'), 'zones', ['name'], unique=False)
    op.create_table('activities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('zone_id', sa.String(), nullable=True),
    sa.Column('work_session_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['work_session_id'], ['work_sessions.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('behaviors',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('zone_id', sa.String(), nullable=True),
    sa.Column('pattern_type', sa.Enum('RECURRING', 'ANOMALY', 'SUSPICIOUS', name='patterntype'), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=True),
    sa.Column('frequency', sa.Integer(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('last_detected', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cameras',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=True),
    sa.Column('rtsp_url', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'MAINTENANCE', name='camerastatus'), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('capabilities', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=True),
    sa.Column('direction', sa.String(), nullable=True),
    sa.Column('coverage_area', sa.JSON(), nullable=True),
    sa.Column('business_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['business_id'], ['businesses.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cameras_camera_id'), 'cameras', ['camera_id'], unique=True)
    op.create_table('demographics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('total_count', sa.Integer(), nullable=False),
    sa.Column('age_groups', sa.JSON(), nullable=True),
    sa.Column('gender_distribution', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('heatmap_data',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('resolution', sa.JSON(), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_analytics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('total_spots', sa.Integer(), nullable=False),
    sa.Column('occupied_spots', sa.Integer(), nullable=False),
    sa.Column('resident_vehicles', sa.Integer(), nullable=False),
    sa.Column('visitor_vehicles', sa.Integer(), nullable=False),
    sa.Column('violations', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('parking_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('vehicle_id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('ENTRY', 'EXIT', 'VIOLATION', name='parkingeventtype'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('parking_spot', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['vehicle_id'], ['vehicles.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('patterns',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('zone_id', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('analysis_period', sa.JSON(), nullable=True),
    sa.Column('detection_count', sa.Integer(), nullable=True),
    sa.Column('pattern_data', sa.JSON(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('security_events',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=False),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('UNAUTHORIZED_ACCESS', 'PACKAGE_THEFT', 'SMOKE_DETECTED', 'SUSPICIOUS_BEHAVIOR', name='eventtype'), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='eventseverity'), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'INVESTIGATING', 'RESOLVED', name='eventstatus'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('evidence', sa.JSON(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('space_analytics',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('property_id', sa.String(), nullable=True),
    sa.Column('zone_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('occupancy', sa.Integer(), nullable=False),
    sa.Column('demographics', sa.JSON(), nullable=True),
    sa.Column('heatmap_data', sa.LargeBinary(), nullable=True),
    sa.Column('flow_patterns', sa.JSON(), nullable=True),
    sa.Column('peak_times', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['properties.id'], ),
    sa.ForeignKeyConstraint(['zone_id'], ['zones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detections',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('camera_id', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('bbox', sa.JSON(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('tracking_id', sa.String(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['camera_id'], ['cameras.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('detections')
    op.drop_table('space_analytics')
    op.drop_table('security_events')
    op.drop_table('patterns')
    op.drop_table('parking_events')
    op.drop_table('parking_analytics')
    op.drop_table('heatmap_data')
    op.drop_table('demographics')
    op.drop_index(op.f('ix_cameras_camera_id'), table_name='cameras')
    op.drop_table('cameras')
    op.drop_table('behaviors')
    op.drop_table('activities')
    op.drop_index(op.f('ix_zones_name'), table_name='zones')
    op.drop_table('zones')
    op.drop_table('valet_requests')
    op.drop_table('parking_spots')
    op.drop_table('floors')
    op.drop_table('work_sessions')
    op.drop_index(op.f('ix_vehicles_plate_number'), table_name='vehicles')
    op.drop_table('vehicles')
    op.drop_table('sleeping_detections')
    op.drop_table('incidents')
    op.drop_table('buildings')
    op.drop_table('breaks')
    op.drop_index(op.f('ix_vehicle_detections_timestamp'), table_name='vehicle_detections')
    op.drop_index(op.f('ix_vehicle_detections_id'), table_name='vehicle_detections')
    op.drop_index(op.f('ix_vehicle_detections_camera_id'), table_name='vehicle_detections')
    op.drop_table('vehicle_detections')
    op.drop_index(op.f('ix_tracking_logs_timestamp'), table_name='tracking_logs')
    op.drop_index(op.f('ix_tracking_logs_person_id'), table_name='tracking_logs')
    op.drop_index(op.f('ix_tracking_logs_id'), table_name='tracking_logs')
    op.drop_index(op.f('ix_tracking_logs_camera_id'), table_name='tracking_logs')
    op.drop_table('tracking_logs')
    op.drop_index(op.f('ix_threat_detections_timestamp'), table_name='threat_detections')
    op.drop_index(op.f('ix_threat_detections_id'), table_name='threat_detections')
    op.drop_index(op.f('ix_threat_detections_camera_id'), table_name='threat_detections')
    op.drop_table('threat_detections')
    op.drop_index(op.f('ix_staff_name'), table_name='staff')
    op.drop_table('staff')
    op.drop_index(op.f('ix_smoking_detections_timestamp'), table_name='smoking_detections')
    op.drop_index(op.f('ix_smoking_detections_id'), table_name='smoking_detections')
    op.drop_index(op.f('ix_smoking_detections_camera_id'), table_name='smoking_detections')
    op.drop_table('smoking_detections')
    op.drop_table('smoke_detections')
    op.drop_table('security_threat_detections')
    op.drop_index(op.f('ix_properties_name'), table_name='properties')
    op.drop_table('properties')
    op.drop_index(op.f('ix_exit_logs_timestamp'), table_name='exit_logs')
    op.drop_index(op.f('ix_exit_logs_person_id'), table_name='exit_logs')
    op.drop_index(op.f('ix_exit_logs_id'), table_name='exit_logs')
    op.drop_index(op.f('ix_exit_logs_camera_id'), table_name='exit_logs')
    op.drop_table('exit_logs')
    op.drop_index(op.f('ix_entry_logs_timestamp'), table_name='entry_logs')
    op.drop_index(op.f('ix_entry_logs_person_id'), table_name='entry_logs')
    op.drop_index(op.f('ix_entry_logs_id'), table_name='entry_logs')
    op.drop_index(op.f('ix_entry_logs_camera_id'), table_name='entry_logs')
    op.drop_table('entry_logs')
    op.drop_index(op.f('ix_businesses_vt_platform_id'), table_name='businesses')
    op.drop_table('businesses')
    # ### end Alembic commands ###
